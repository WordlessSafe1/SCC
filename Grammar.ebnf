# <comment>				::= "//" { <letter> | <digit> }
<program>				::= <function>
<function>				::= "int" "main" "(" ")" "{" <return_statement> "}"
<return_statement>		::= "return" <int>
<expression>			::= <logical_or_expr>
<logical_or_expr>		::= <logical_and_expr> { "||" <logical_and_expr> }
<logical_and_expr>		::= <bitwise_or_expr> { "&&" <bitwise_or_expr> }
<bitwise_or_expr>		::= <bitwise_xor_expr> { '|' <bitwise_xor_expr> }
<bitwise_xor_expr>		::= <bitwise_and_expr> { '^' <bitwise_and_expr> }
<bitwise_and_expr>		::= <equality_expr> { '&' <equality_expr> }
<equality_expr>			::= <relational_expr> { ( "==" | "!=" ) <relational_expr> }
<relational_expr>		::= <bit_shift_expr> { ( '<' | '>' | "<=" | ">=" ) <bit_shift_expr> }
<bit_shift_expr>		::= <additive_expr> { ( "<<" | ">>" ) <additive_expr> }
<additive_expr>			::= <term> { ( '+' | '-' ) <term> }
<term>					::= <factor> { ( '*' | '/' | '%' ) <factor> }
<factor>				::= <unary_op> <factor> | <int>

<unary_op>				::= '~' | '!' | '-'

<id>					::= <letter> { <letter> | <digit> }
<character-literal>		::= "'" ( <symbol> | <letter> | <digit> ) "'"
<symbol>				::= "!" | '"' | "#" | "$" | "%" | "&" | "'" | "(" | ")" | "*" | "+" | ","
							| "-" | "." | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "\\" # \\ is a literal \
							| "]" | "^" | "_" | "`" | "{" | "|" | "}" | "~" ;
<letter>				::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H"
							| "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P"
							| "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X"
							| "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f"
							| "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n"
							| "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v"
							| "w" | "x" | "y" | "z"
<int>					::= <digit> | <int> <digit>
<digit>					::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"